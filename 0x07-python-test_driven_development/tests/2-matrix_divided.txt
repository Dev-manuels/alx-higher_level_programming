>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

>>> matrix_divided([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]], 0.5)
[[2.0, 4.0, 6.0], [8.0, 10.0, 12.0]]

>>> matrix_divided([[1, 2, 3], [4, 5], [6, 7, 8]], 3)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided("not_a_matrix", 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], "not_a_number")
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> matrix_divided()
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> tmp = float('inf')
>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], tmp)
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
